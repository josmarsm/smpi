/* * Copyright (c) 2013, CPD-UFSM. All Rights Reserved. */ var moverClick = false;function selectRow( row ) { if ( moverClick ) { clearRows(); moverClick = false; } var classe = isSelected(row) ? '' : 'linhaSelecionada'; row.cells[0].className = classe; row.cells[1].className = classe; } function clearRow( row ) { row.cells[0].className = ''; row.cells[1].className = ''; }function isSelected( row ) { return row.cells[0].className== 'linhaSelecionada'; }function isFirst( row ) { return row.sectionRowIndex == 0; }function isLast( row ) { return (document.getElementById('prioridades').length - 1) == (row.sectionRowIndex); }function getOrdem( row ) { return row.cells[0]; }function decrementaOrdem( row ) { var ordem = row.cells[0]; ordem.innerHTML = (parseInt(ordem.innerHTML.replace('°', '')) - 1) + '°'; }function incrementaOrdem( row ) { var ordem = row.cells[0]; ordem.innerHTML = (parseInt(ordem.innerHTML.replace('°', '')) + 1) + '°'; }function clearRows() { var rows = document.getElementById('prioridades').rows; var length = rows.length; for ( var i = 0; i < length; i++ ) { clearRow(rows[i]); } }function moveUp() { moverClick = true;var selectedRows = getSelectedRows();if ( selectedRows == null || selectedRows.length <= 0 ) { return; }var tbody = document.getElementById('prioridades'); var length = selectedRows.length; for ( var i = 0; i < length; i++ ) { var row = selectedRows[i];if ( !isFirst(row) ) { var rowAnterior = tbody.rows[ row.sectionRowIndex - 1]; if ( rowAnterior != null && rowAnterior != 'undefined' && !isSelected(rowAnterior) ) { tbody.insertBefore(row, rowAnterior);decrementaOrdem(row); incrementaOrdem(rowAnterior); } } } }function moveDown() { moverClick = true;var selectedRows = getSelectedRows();if ( selectedRows == null || selectedRows.length <= 0 ) { return; }var tbody = document.getElementById('prioridades'); var length = selectedRows.length; for ( var i = (length - 1); i >= 0; i-- ) { var row = selectedRows[i];if ( !isLast(row) ) { var rowPosterior = tbody.rows[ row.sectionRowIndex + 1]; if ( rowPosterior != null && rowPosterior != 'undefined' && !isSelected(rowPosterior) ) { tbody.insertBefore(rowPosterior, row);incrementaOrdem(row); decrementaOrdem(rowPosterior); } } } }function getSelectedRows() { var rows = getById('prioridades').rows; var selectedRows = new Array(); for ( var i = 0; i < rows.length; i++ ) { var row = rows[i]; if ( isSelected(row) ) { selectedRows[selectedRows.length] = row; } } return selectedRows; } 